@model ToZeptyUI.Models.UserView
@using CaptchaMvc.HtmlHelpers;
@{
    ViewBag.Title = "Registration";
}
<div class=" container  pt-2 " style="margin-left:390px">
    <h2 class="p-3"> New Registration</h2>


    @using (Html.BeginForm("Registration", "Account", FormMethod.Post, new { id = "registrationForm" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, "Enter First Name :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, "Enter Last Name :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, "Enter Email :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, "Enter Username:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, "Enter Phone Number:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-12">
            @Html.LabelFor(model => model.Password, "Enter Password :", htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, "Enter to Confirm Password : ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="d-flex justify-content-between align-items-center mb-5">
        <div style="display: block;">

            @Html.MathCaptcha("Refresh", "Enter Captcha", "Please enter text")

            <div>
                <button class="btn btn-dark" style="font-size: 10px; padding: 4px 10px; margin-top: -29%; margin-left: 93%;"
                        onclick="window.location.reload()">
                    Refresh
                </button>
            </div>

            <p class="text-danger " style="font-weight: bold;">  @ViewBag.ErrMessage </p>
        </div>

        <br />
    </div>
    <div class="form-group">
        @Html.Label("User Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (User.Identity.IsAuthenticated)
            {
                if (User.IsInRole("Admin"))
                {
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.UserType, 2) Customer
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.UserType, 1) Admin
                    </label>
                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                }
            }
            else
            {
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.UserType, 2, new { @checked = true }) Customer
                </label>
                @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
            }
        </div>
    </div>

    <div>


    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
            <input type="button" value="Reset" class="ms-2 btn btn-warning" onclick="resetForm('registrationForm')" />
        </div>
    </div>



</div>
    }
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function resetForm(formId) {
            var form = document.getElementById(formId);
            form.reset();
            var validationMessages = form.querySelectorAll('[data-valmsg-for]');
            for (var i = 0; i < validationMessages.length; i++) {
                validationMessages[i].innerHTML = ''; 
                validationMessages[i].style.display = 'none'; 
            }
        }
    </script>
}